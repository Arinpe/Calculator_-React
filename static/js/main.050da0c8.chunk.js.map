{"version":3,"sources":["components/ButtonPanel.js","components/Display.js","components/Button.js","logic/operate.js","logic/calculate.js","helpers/number.js","components/Calculator.js","components/App.js","index.js"],"names":["ButtonPanel","_ref","children","_jsx","className","Display","memor","current","_jsxs","Button","name","onClick","color","wide","concat","type","value","defaultProps","Number1","Number2","operator","firstNumber","Big","secondNumber","parseInt","div","mul","add","toString","sub","calculate","calculator","btn","num","total","next","prev","includes","operate","Number","MAX_SAFE_INTEGER","toExponential","buttons","Calculator","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","handledisplay","tot","op","handleClick","e","_this$state","state","res","target","setState","_objectSpread","_createClass","key","_this2","_this$state2","this","_Fragment","ButtonPannel","map","group","button","isOperator","Component","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.050da0c8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ButtonPanel({ children }) {\r\n  return <div className=\"button_panel\">{children}</div>;\r\n}\r\n\r\nButtonPanel.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Display({ memor, current }) {\r\n  return (\r\n    <div className=\"display\">\r\n      <div className=\"displayupper\">{memor}</div>\r\n      <div className=\"displaylower\">{current}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nDisplay.defaultProps = {\r\n  memor: '',\r\n  current: '0',\r\n};\r\n\r\nDisplay.propTypes = {\r\n  memor: PropTypes.string,\r\n  current: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({\r\n  name, onClick, color, wide,\r\n}) {\r\n  return (\r\n    <button\r\n      className={`btn ${color ? 'operatorBtn' : ''} ${wide ? 'wide' : ''}`}\r\n      type=\"button\"\r\n      value={name}\r\n      onClick={onClick}\r\n    >\r\n      {name}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: null,\r\n  wide: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  color: PropTypes.bool,\r\n  wide: PropTypes.bool,\r\n};\r\n","import Big from 'big.js';\r\n\r\nexport default (Number1, Number2, operator) => {\r\n  const firstNumber = new Big(Number1);\r\n  const secondNumber = Number2 && new Big(Number2);\r\n  if (operator === '/' && parseInt(secondNumber, 10) === 0) {\r\n    return 'Cant divide by 0';\r\n  }\r\n  switch (operator) {\r\n    case '/':\r\n      return firstNumber.div(secondNumber);\r\n    case '*':\r\n      return firstNumber.mul(secondNumber);\r\n    case '+':\r\n      return firstNumber.add(secondNumber);\r\n    case '%':\r\n      return firstNumber.div(100).toString();\r\n    default:\r\n      return firstNumber.sub(secondNumber);\r\n  }\r\n};\r\n","import operate from './operate';\r\nimport formatNumber from '../helpers/number';\r\n\r\nconst calculate = (calculator, btn) => {\r\n  let{\r\n    total, next, operator, prev,\r\n  } = calculator;\r\n  const numbers = ['9', '8', '7', '6', '5', '4', '3', '2', '1', '0'];\r\n\r\n  const operators = ['/', '*', '+', '-', 'X2'];\r\n\r\n  if (numbers.includes(btn)) {\r\n    total = null;\r\n    if (!prev || prev === '0') {\r\n      prev = btn;\r\n    } else if (prev && !operator) {\r\n      prev += btn;\r\n    } else if ((operator && !next) || (next && next[0] === '0')) {\r\n      next = btn;\r\n    } else if (operator && next) {\r\n      next += btn;\r\n    }\r\n  }\r\n\r\n  if (operators.includes(btn)) {\r\n    if ((!prev || prev === '0') && total) {\r\n      prev = total;\r\n      total = null;\r\n    } else if (next) {\r\n      prev = operate(prev, next, operator).toString();\r\n      next = '0';\r\n      total = null;\r\n    }\r\n    operator = btn;\r\n  }\r\n  if (btn === '%') {\r\n    if (prev && !operator) {\r\n      total = operate(prev, null, '%');\r\n      prev = '0';\r\n    }\r\n    if (next) {\r\n      next = operate(next, null, '%');\r\n    }\r\n  }\r\n\r\n  if (btn === '+/-') {\r\n    if (prev && !next) {\r\n      prev *= -1;\r\n    }\r\n\r\n    if (next) {\r\n      next *= -1;\r\n    }\r\n\r\n    total *= -1;\r\n  }\r\n\r\n  if (btn === '+/-') {\r\n    if (prev && !next) {\r\n      prev *= -1;\r\n    }\r\n\r\n    if (next) {\r\n      next *= -1;\r\n    }\r\n\r\n    total *= -1;\r\n  }\r\n  if (btn === '=') {\r\n    total = operate(prev, next, operator);\r\n    total = formatNumber(total);\r\n    next = '0';\r\n    operator = null;\r\n    prev = '0';\r\n  }\r\n\r\n  if (btn === '.') {\r\n    if (prev && !prev.includes(btn)) {\r\n      prev += btn;\r\n    }\r\n\r\n    if (next && !next.includes(btn)) {\r\n      next += btn;\r\n    }\r\n  }\r\n\r\n  if (btn === 'AC') {\r\n    next = null;\r\n    operator = null;\r\n    prev = '0';\r\n    total = null;\r\n  }\r\n\r\n  return {\r\n    total,\r\n    next,\r\n    operator,\r\n    prev,\r\n  };\r\n};\r\n\r\nexport default calculate;\r\n","export default num => {\r\n  let res;\r\n  if (num > Number.MAX_SAFE_INTEGER) {\r\n    res = num.toExponential(12).toString();\r\n  } else {\r\n    res = num.toString();\r\n  }\r\n  return res;\r\n};\r\n","import React, { Component } from 'react';\r\nimport ButtonPannel from './ButtonPanel';\r\nimport Display from './Display';\r\nimport Button from './Button';\r\nimport calculate from '../logic/calculate';\r\n\r\nconst buttons = [\r\n  ['AC', '+/-', '%', '/'],\r\n  ['9', '8', '7', '*'],\r\n  ['6', '5', '4', '+'],\r\n  ['3', '2', '1', '-'],\r\n  ['0', '.', '='],\r\n];\r\nclass Calculator extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      total: null,\r\n      prev: '0',\r\n      next: '0',\r\n      operator: null,\r\n    };\r\n  }\r\n\r\n  handledisplay = (prev, next, tot, op) => {\r\n    let ans;\r\n    if (tot) {\r\n      ans = tot;\r\n    } else if (!op) {\r\n      ans = prev;\r\n    } else {\r\n      ans = next;\r\n    }\r\n    return ans;\r\n  };\r\n\r\n  handleClick = e => {\r\n    const {\r\n      total, next, operator, prev,\r\n    } = this.state;\r\n    const res = calculate({\r\n      total, next, operator, prev,\r\n    }, e.target.value);\r\n\r\n    this.setState({\r\n      ...res,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      prev, next, total, operator,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"App\">\r\n          <div className=\"App__calculator\">\r\n            <Display current={this.handledisplay(prev, next, total, operator)} />\r\n            <ButtonPannel>\r\n              {buttons.map(group => (\r\n                <div key={group} className=\"row\">\r\n                  {group.map(button => {\r\n                    const operators = ['+', '-', '*', '/', '='];\r\n                    const isOperator = operators.includes(button);\r\n                    return (\r\n                      <Button\r\n                        onClick={this.handleClick}\r\n                        key={button}\r\n                        name={button}\r\n                        color={isOperator}\r\n                        wide={button === '0'}\r\n                      />\r\n                    );\r\n                  })}\r\n                </div>\r\n              ))}\r\n            </ButtonPannel>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React from 'react';\r\nimport Calculator from './Calculator';\r\n\r\nconst App = () => (\r\n  <>\r\n    <div className=\"App\">\r\n      <div className=\"Appcalculator\">\r\n        <Calculator />\r\n      </div>\r\n    </div>\r\n  </>\r\n);\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}